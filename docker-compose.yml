version: "3.8"
services:
    app:
        container_name: app
        build:
            context: ./.docker/php
            dockerfile: Dockerfile
        expose:
            - 9000
        volumes:
            - .:/var/www/html
            - ./public:/var/www/html/public
        depends_on:
            - mysql
        networks:
            - notepad
    nginx:
        container_name: nginx
        build:
            context: ./.docker/nginx
            dockerfile: Dockerfile
        volumes:
            - ./public:/var/www/html/public
        ports:
            - 8000:80
        depends_on:
            - app
            - mysql
            - adminer
            - redis
        environment:
            NGINX_FPM_HOST: app
            NGINX_ROOT: /var/www/html/public
        networks:
            - notepad
    adminer:
        container_name: adminer
        image: adminer:latest
        restart: always
        ports:
            - 8080:8080
        depends_on:
            - mysql
        networks:
            - notepad
    mysql:
        container_name: mysql
        image: mysql:8.0.20
        restart: always
        platform: linux/x86_64
        volumes:
            - ./storage/db-data:/var/lib/mysql
        ports:
            - 3306:3306
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        networks:
            - notepad
    redis:
        container_name: redis
        image: redis:latest
        ports:
            - 6379:6379
        networks:
            - notepad
#    elasticsearch:
#        container_name: elasticsearch
#        image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION}
#        ports:
#            - 9200:9200
#        environment:
#            - discovery.type=single-node
#            - xpack.security.enabled=${ELASTICSEARCH_SECURITY}
#        ulimits:
#            memlock:
#                soft: -1
#                hard: -1
#        networks:
#            - notepad
#    kibana:
#        image: docker.elastic.co/kibana/kibana:${ELASTICSEARCH_VERSION}
#        container_name: kibana
#        ports:
#            - 5601:5601
#        environment:
#            - ELASTICSEARCH_URL=${APP_URL}:9200
#        links:
#            - elasticsearch
#        depends_on:
#            - elasticsearch
#        networks:
#            - notepad
#        deploy:
#            resources:
#                limits:
#                    cpus: '2.0'
#                reservations:
#                    cpus: '1.0'
networks:
    notepad:
